name: Demo.Inventory.Ingestion
concurrency: demo-inventory-ingestion

on:
  push:
    branches:
      - main
      - feature/**

  workflow_dispatch:

env:
  DotNetVersion: 6.0.x
  PackagePath: ./published
  ProjectName: Demo.Inventory.Ingestion.Functions
  FunctionAppName: inventorying
  ArtifactName: funcapp
  ResourceGroupName: cc-rg-inventorying
  ResourceGroupLocation: australiasoutheast
  
jobs:
  CI:
    name: build test and publish
    runs-on: ubuntu-latest
    steps:
      - name: Build, test and publish function app
        uses: Cheranga/GitHubActions/restorebuildtestpublish@master
        with:
          dotnetVersion: ${{ env.DotNetVersion }}
          projectName: ${{ env.ProjectName }}
          artifactName: ${{ env.ArtifactName }}
  Deploy:
    name: Deploy
    needs: CI
    runs-on: ubuntu-latest
    env:
      EnvironmentName: dev
      Category: nonprod
      Queues: inventory-changes
    steps:
#      - name: "Create resource group"
#        uses: Cheranga/GitHubActions/createresourcegroup@master
#        with:
#          credentials: ${{ secrets.AZURE_CREDENTIALS }}
#          name: ${{ env.ResourceGroupName }}
#          location: ${{ env.ResourceGroupLocation }}
#          
#      - name: Create Storage Account Resources
#        uses: Cheranga/GitHubActions/storageaccount@master
#        with:
#          credentials: ${{ secrets.AZURE_CREDENTIALS }}
#          deploymentName: ${{ github.run_number }}-storage-account-updates
#          resourceGroupName: ${{ env.ResourceGroupName }}
#          name: sg${{ env.FunctionAppName }}${{ env.EnvironmentName }}
#          location: ${{ env.ResourceGroupLocation }}
#          storageType: ${{ env.Category }}
#          queues: ${{ env.Queues }}
          
      - name: Vanilla Function App
        uses: Cheranga/GitHubActions/vanillafunctionapp@master
        with:
          credentials: ${{ secrets.AZURE_CREDENTIALS }}
          deploymentName: ${{ github.run_number }}-${{ env.FunctionAppName }}
          environmentName: dev
          resourceGroupName: ${{ env.ResourceGroupName }}
          functionAppName: ${{ env.FunctionAppName }}
          location: ${{ env.ResourceGroupLocation }}
          category: nonprod          